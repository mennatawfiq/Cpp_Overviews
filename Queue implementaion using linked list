#include <bits/stdc++.h>

using namespace std;

class Node{
public:
    int data;
    Node *next;
    Node(){
        data = 0;
        next = NULL;
    }
};

class myQueue{
    Node *front;
    Node *rear;
public:
    myQueue(){
        front = NULL;
        rear = NULL;
    }
    bool isEmpty(){
        return front == NULL;
    }
    void enqueue(int item){
        Node *newNode = new Node();
        newNode -> data = item;
        if(isEmpty()){
            front = newNode;
            rear = newNode;
        }else{
            rear -> next = newNode;
            rear = newNode;
        }
    }
    void dequeue(){
        if(isEmpty()){
            cout << "the queue is empty";
        }else{
            Node *delPtr = front;
            front = front -> next;
            delete delPtr;
        }
    }
    void peek(int &first){
        if(isEmpty()){
            cout << "the queue is empty";
        }else{
            first = front -> data;
        }
    }
    void clear(){
        while(!isEmpty()){
            dequeue();
        }
    }
    int count(){
        int counter = 0;
        if(isEmpty()){
            cout << "the queue is empty";
        }else{
            Node *ptr = front;
            while(ptr != NULL){
                counter++;
                ptr = ptr -> next;
            }
            delete ptr;
        }
        return counter;
    }
    void display(){
        if(isEmpty()){
            cout << "the queue is empty";
        }else{
            Node *ptr = front;
            while(ptr != NULL){
                cout << ptr -> data << " ";
                ptr = ptr -> next;
            }
            cout << endl;
            delete ptr;
        }
    }
    bool search(int item){
        if(isEmpty()){
            cout << "the queue is empty";
        }else{
            Node *ptr = front;
            while(ptr != NULL){
                if(ptr -> data == item){
                    return true;
                }
                ptr = ptr -> next;
            }
            cout << endl;
            delete ptr;
        }
        return false;
    }
};

int main(){
    cout << "enter number of items you want to enqueue: " << endl;
    int num;
    cin >> num;
    myQueue q;
    while(num--){
        cout << "enter an item: " << endl;
        int item;
        cin >> item;
        q.enqueue(item);
    }
    q.display();
    q.clear();
    q.display();
}
